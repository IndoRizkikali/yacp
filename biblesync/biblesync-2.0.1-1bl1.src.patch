diff -buprN -x CYGWIN-PATCHES -x aclocal.m4~ -x aclocal.m4t -x autom4te.cache -x config.cache -x config.guess -x config.log -x config.status -x config.sub -x '*SlackBuild*' -x '*.egg-info' -x '*.dll' -x '*.exe' -x '*.o' -x '*.gch' -x '*.gem' -x .gitignore -x '*.jpg' -x '*.png' -x '*.qm' -x '*.svgz' -x '*.tif' -x '*.class' -x '*.jlc' -x '*.pyc' -x '*.pyo' -x '*.mo' -x '*.gmo' -x '*.orig' -x '*.rej' -x '*.spec' -x '*.temp' -x '*~' -x '*.stackdump' -x x86_64-pc-cygwin -x omf.make -x xmldocs.make -x gnome-doc-utils.make -x gnome-doc-utils.m4 -x mate-doc-utils.make -x mate-doc-utils.m4 origsrc/biblesync-2.0.1/CMakeLists.txt src/biblesync-2.0.1/CMakeLists.txt
--- origsrc/biblesync-2.0.1/CMakeLists.txt	2018-04-28 13:33:32.000000000 +0900
+++ src/biblesync-2.0.1/CMakeLists.txt	2018-05-16 09:35:09.128376100 +0900
@@ -42,7 +42,7 @@ ELSE(WIN32)
     # Headers and linkage from libuuid
     FIND_PACKAGE(UUID REQUIRED)
     INCLUDE_DIRECTORIES("${UUID_INCLUDE_DIRS}")
-    TARGET_LINK_LIBRARIES(biblesync "${UUID_LIBRARIES}")
+    TARGET_LINK_LIBRARIES(biblesync "${UUID_LIBRARIES}" "intl")
 ENDIF(WIN32)
 
 # Allow build systems to specify non-standard install locations
@@ -107,7 +107,8 @@ CONFIGURE_FILE(${CMAKE_CURRENT_SOURCE_DI
 
 # Install both the library and its headers
 INSTALL(TARGETS biblesync
-    DESTINATION "${LIBDIR}")
+    RUNTIME DESTINATION bin
+    ARCHIVE DESTINATION "${LIBDIR}")
 INSTALL(FILES ${biblesync_headers}
     DESTINATION "${INCLUDEDIR}")
 INSTALL(FILES "${CMAKE_CURRENT_BINARY_DIR}/biblesync.pc"
