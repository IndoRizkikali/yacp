--- origsrc/vowpal_wabbit-8.6.1/configure.ac	2018-07-21 21:39:26.000000000 +0900
+++ src/vowpal_wabbit-8.6.1/configure.ac	2019-01-23 09:29:15.353019100 +0900
@@ -16,16 +16,10 @@ AM_PROG_LIBTOOL
 AX_CXX_COMPILE_STDCXX_11
 AC_HEADER_STDC
 
-AX_BOOST_BASE([1.0], [], [
-  AC_MSG_ERROR([Could not find a valid version of boost.])
-])
-AX_BOOST_PROGRAM_OPTIONS()
+BOOST_REQUIRE
+BOOST_PROGRAM_OPTIONS
 
-AX_CHECK_ZLIB()
-ZLIB_CPPFLAGS="-I${ZLIB_HOME}/include"
-ZLIB_LDFLAGS="-L${ZLIB_HOME}/lib -lz"
-AC_SUBST(ZLIB_CPPFLAGS)
-AC_SUBST(ZLIB_LDFLAGS)
+PKG_CHECK_MODULES([ZLIB], [zlib])
 
 PTHREAD_LIBS=-lpthread
 AX_PTHREAD([], [
--- origsrc/vowpal_wabbit-8.6.1/library/Makefile.am	2018-07-21 21:39:26.000000000 +0900
+++ src/vowpal_wabbit-8.6.1/library/Makefile.am	2019-01-23 10:08:37.520314900 +0900
@@ -18,7 +18,7 @@ ACLOCAL_AMFLAGS = -I acinclude.d
 
 AM_CXXFLAGS = ${BOOST_CPPFLAGS} ${ZLIB_CPPFLAGS} ${PTHREAD_CFLAGS}
 
-AM_CXXFLAGS += -I ../rapidjson/include -I ../explore
+AM_CXXFLAGS += -I ../rapidjson/include -I $(top_srcdir)/explore
 
 AM_LDFLAGS = ${BOOST_LDFLAGS} ${BOOST_PROGRAM_OPTIONS_LIB} ${ZLIB_LDFLAGS} ${PTHREAD_LIBS}
 
--- origsrc/vowpal_wabbit-8.6.1/vowpalwabbit/Makefile.am	2018-07-21 21:39:26.000000000 +0900
+++ src/vowpal_wabbit-8.6.1/vowpalwabbit/Makefile.am	2019-01-23 09:49:27.300722600 +0900
@@ -1,21 +1,24 @@
 lib_LTLIBRARIES = liballreduce.la libvw.la libvw_c_wrapper.la
 
 liballreduce_la_SOURCES = allreduce_sockets.cc allreduce_threads.cc vw_exception.cc
+liballreduce_la_LDFLAGS = -no-undefined
 
 bin_PROGRAMS = vw active_interactor
 
 libvw_la_SOURCES = parser_helper.cc global_data.cc io_buf.cc parse_regressor.cc parse_primitives.cc unique_sort.cc cache.cc rand48.cc no_label.cc simple_label.cc multiclass.cc oaa.cc multilabel_oaa.cc boosting.cc ect.cc marginal.cc autolink.cc binary.cc lrq.cc cost_sensitive.cc multilabel.cc label_dictionary.cc csoaa.cc cb.cc cb_adf.cc cb_algs.cc search.cc search_meta.cc search_sequencetask.cc search_dep_parser.cc search_hooktask.cc search_multiclasstask.cc search_entityrelationtask.cc search_graph.cc parse_example.cc scorer.cc network.cc parse_args.cc accumulate.cc gd.cc learner.cc mwt.cc lda_core.cc gd_mf.cc mf.cc bfgs.cc noop.cc print.cc example.cc parser.cc loss_functions.cc sender.cc nn.cc confidence.cc bs.cc cbify.cc explore_eval.cc topk.cc stagewise_poly.cc log_multi.cc recall_tree.cc active.cc active_cover.cc cs_active.cc kernel_svm.cc best_constant.cc ftrl.cc svrg.cc lrqfa.cc interact.cc comp_io.cc interactions.cc vw_exception.cc vw_validate.cc audit_regressor.cc gen_cs_example.cc cb_explore.cc action_score.cc cb_explore_adf.cc OjaNewton.cc parse_example_json.cc baseline.cc classweight.cc
+libvw_la_LDFLAGS = -no-undefined
 
 libvw_c_wrapper_la_SOURCES = vwdll.cpp
+libvw_c_wrapper_la_LDFLAGS = -no-undefined
 
 # accumulate.cc uses all_reduce
-libvw_la_LIBADD = liballreduce.la
+libvw_la_LIBADD = $(ZLIB_LIBS) $(BOOST_PROGRAM_OPTIONS_LIBS) liballreduce.la
 libvw_c_wrapper_la_LIBADD = libvw.la
 
 ACLOCAL_AMFLAGS = -I acinclude.d
 
 AM_CXXFLAGS = ${BOOST_CPPFLAGS} ${ZLIB_CPPFLAGS} ${PTHREAD_CFLAGS} -Wall -Wno-unused-local-typedefs
-LIBS = ${BOOST_LDFLAGS} ${BOOST_PROGRAM_OPTIONS_LIB} ${ZLIB_LDFLAGS} ${PTHREAD_LIBS}
+LIBS = ${BOOST_LDFLAGS} ${BOOST_PROGRAM_OPTIONS_LIB} ${ZLIB_LIBS} ${PTHREAD_LIBS}
 
 CXXOPTIMIZE =
 
@@ -48,7 +51,7 @@ if CLANG_LIBCXX
 AM_CXXFLAGS += -stdlib=libc++
 endif
 
-AM_CXXFLAGS += -I ../rapidjson/include -I ../explore
+AM_CXXFLAGS += -I ../rapidjson/include -I $(top_srcdir)/explore
 
 AM_CXXFLAGS += $(CXXOPTIMIZE)
 
