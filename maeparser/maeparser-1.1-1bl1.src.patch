--- origsrc/maeparser-1.1/CMakeLists.txt	2019-03-01 04:01:58.000000000 +0900
+++ src/maeparser-1.1/CMakeLists.txt	2019-05-03 01:45:55.146992100 +0900
@@ -18,7 +18,7 @@ SET_TARGET_PROPERTIES (maeparser
        VERSION 1.1
        SOVERSION 1
 )
-target_link_libraries(maeparser Boost::disable_autolinking Boost::dynamic_linking Boost::iostreams)
+target_link_libraries(maeparser boost_iostreams)
 
 target_include_directories(maeparser PUBLIC
     $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}>
@@ -32,7 +32,7 @@ install(TARGETS maeparser
 
 INSTALL(EXPORT maeparser-targets
     FILE ${PROJECT_NAME}-config.cmake
-    DESTINATION lib/cmake)
+    DESTINATION lib/cmake/maeparser)
 
 target_compile_definitions(maeparser PRIVATE IN_MAEPARSER)
 
@@ -47,3 +47,10 @@ add_test(NAME unittest COMMAND ${CMAKE_B
 install(FILES Buffer.hpp MaeBlock.hpp  MaeParserConfig.hpp  MaeParser.hpp  Reader.hpp MaeConstants.hpp
         DESTINATION include/maeparser)
 
+
+SET(prefix ${CMAKE_INSTALL_PREFIX})
+SET(exec_prefix ${CMAKE_INSTALL_PREFIX})
+SET(libdir ${CMAKE_INSTALL_PREFIX}/lib)
+SET(includedir ${CMAKE_INSTALL_PREFIX}/include)
+CONFIGURE_FILE(${CMAKE_SOURCE_DIR}/maeparser.pc.in ${CMAKE_BINARY_DIR}/maeparser.pc @ONLY)
+INSTALL(FILES ${CMAKE_BINARY_DIR}/maeparser.pc DESTINATION ${CMAKE_INSTALL_PREFIX}/lib/pkgconfig)
--- origsrc/maeparser-1.1/maeparser.pc.in	1970-01-01 09:00:00.000000000 +0900
+++ src/maeparser-1.1/maeparser.pc.in	2019-05-03 01:45:55.100119500 +0900
@@ -0,0 +1,10 @@
+prefix=@prefix@
+exec_prefix=@exec_prefix@
+libdir=@libdir@
+includedir=@includedir@
+
+Name: maeparser
+Description: Maestro file parser
+Version: @VERSION@
+Libs: -L${libdir} -lmaeparser
+Cflags: -I${includedir}
--- origsrc/maeparser-1.1/test/CMakeLists.txt	2019-03-01 04:01:58.000000000 +0900
+++ src/maeparser-1.1/test/CMakeLists.txt	2019-05-03 01:40:05.459920200 +0900
@@ -3,7 +3,7 @@ include_directories(..)
 add_executable(unittest
     MainTestSuite.cpp BufferTest.cpp MaeBlockTest.cpp MaeParserTest.cpp ReaderTest.cpp WriterTest.cpp UsageDemo.cpp)
 
-target_link_libraries(unittest maeparser Boost::unit_test_framework)
+target_link_libraries(unittest maeparser boost_unit_test_framework)
 
 if(MSVC)
     add_custom_command(TARGET unittest POST_BUILD COMMAND ${CMAKE_COMMAND} -E copy_if_different
