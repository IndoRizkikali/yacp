--- origsrc/fflas-ffpack-2.4.0/configure.ac	2019-05-11 00:26:53.000000000 +0900
+++ src/fflas-ffpack-2.4.0/configure.ac	2019-05-31 17:50:14.626816500 +0900
@@ -251,37 +251,25 @@ dnl echo '******************************
 dnl exit 1
 dnl ])
 
-BLAS_FOUND=false
-
-FF_CHECK_BLAS_CFLAGS
-FF_CHECK_BLAS_LIBS
-FF_CHECK_MKL
-FF_CHECK_USER_BLAS
-FF_CHECK_USER_LAPACK
-
-FF_OPENBLAS_NUM_THREADS
-
-# FF_CHECK_BLAS
-
-# FF_CHECK_GOTOBLAS
-
-# FF_CHECK_GSL
-
-# if test "$BLAS_FOUND" = "false" ; then
-	# FF_CHECK_CBLAS
-# fi
-
-# if test "$BLAS_FOUND" = "false" ; then
-	# FF_CHECK_OTHERBLAS
-# fi
-
-# FF_CHECK_LAPACK
-
-# if test "$BLAS_FOUND" = "false" ; then
-	# FF_CHECK_BLAS2
-# fi
-
-
+PKG_CHECK_MODULES([BLAS], [blas], [
+    CBLAS_FLAG="-D__FFLASFFPACK_HAVE_CBLAS"
+    AC_DEFINE(HAVE_BLAS, 1, [Define if BLAS is installed])
+    AC_DEFINE(HAVE_CBLAS, 1, [Define if C interface to BLAS is installed])
+    BLAS_FOUND=true
+    BLAS_PATH="`pkg-config blas --variable=prefix`"
+    HAVE_BLAS=yes
+	CBLAS_LIBS=${BLAS_LIBS}
+    AC_SUBST(BLAS_LIBS)
+    AC_SUBST(BLAS_CFLAGS)
+    AC_SUBST(CBLAS_FLAG)
+    AC_SUBST(BLAS_FOUND)
+    AC_SUBST(BLAS_PATH)
+	AC_SUBST(CBLAS_LIBS)])
+PKG_CHECK_MODULES([LAPACK], [lapack], [
+    AC_DEFINE(HAVE_LAPACK, 1, [Define if LAPACK is installed])
+    AC_DEFINE(HAVE_CLAPACK, 1, [Define if C interface to LAPACK is available])
+    HAVE_LAPACK=yes])
+AM_CONDITIONAL(FFLASFFPACK_HAVE_LAPACK, test "x$HAVE_LAPACK" = "xyes")
 
 # BLAS_LIBS="${BLAS_LIBS}"
 # BLAS_LIBS="-L/${BLAS_PATH} ${LAPACK_LIBS} ${BLAS_LIBS}"
@@ -289,7 +277,7 @@ FF_OPENBLAS_NUM_THREADS
 
 # FF_CHECK_CUDA
 
-# AM_CONDITIONAL(FFLASFFPACK_HAVE_BLAS,  test "x$BLAS_FOUND" != "xfalse")
+AM_CONDITIONAL(FFLASFFPACK_HAVE_BLAS,  test "x$BLAS_FOUND" != "xfalse")
 
 
 # FF_BENCH
--- origsrc/fflas-ffpack-2.4.0/fflas-ffpack-config.in	2019-05-11 00:26:53.000000000 +0900
+++ src/fflas-ffpack-2.4.0/fflas-ffpack-config.in	2019-05-31 17:50:14.642445300 +0900
@@ -103,7 +103,7 @@ while test $# -gt 0; do
 			;;
 
 		--blas-cflags)
-			echo -I${includedir} @BLAS_CFLAG@  @AVXFLAGS@ # @PARFLAGS@ # @CUDA_CFLAGS@
+			echo -I${includedir} @BLAS_CFLAGS@ # @PARFLAGS@ # @CUDA_CFLAGS@
 			;;
 
 		--libs)
--- origsrc/fflas-ffpack-2.4.0/macros/avx-check.m4	2019-05-11 00:26:53.000000000 +0900
+++ src/fflas-ffpack-2.4.0/macros/avx-check.m4	2019-05-31 17:50:14.689301500 +0900
@@ -31,7 +31,7 @@ AC_DEFUN([FF_CHECK_AVX],
 	AS_IF([ test  "x$enable_avx" != "xno" ],
 	[
 		BACKUP_CXXFLAGS=${CXXFLAGS}
-		CODE_AVX=`cat macros/CodeChunk/avx.C`
+		CODE_AVX=`cat ${srcdir}/macros/CodeChunk/avx.C`
 	
 	    dnl Check for AVX
 	    dnl Intel compilers usually do not require option to enable avx
--- origsrc/fflas-ffpack-2.4.0/macros/cuda-check.m4	2019-05-11 00:26:53.000000000 +0900
+++ src/fflas-ffpack-2.4.0/macros/cuda-check.m4	2019-05-31 17:50:14.704928000 +0900
@@ -77,7 +77,7 @@ do
 
 	CXXFLAGS="${CXXFLAGS} ${CUDA_CFLAGS}"
 	LIBS="${LIBS} ${CUDA_LIBS}"
-	CODE_CUDA=`cat macros/CodeChunk/cuda.C`
+	CODE_CUDA=`cat ${srcdir}/macros/CodeChunk/cuda.C`
 
 	AC_TRY_LINK(
 		[
--- origsrc/fflas-ffpack-2.4.0/macros/simd-check.m4	2019-05-11 00:26:53.000000000 +0900
+++ src/fflas-ffpack-2.4.0/macros/simd-check.m4	2019-05-31 17:50:14.704928000 +0900
@@ -45,7 +45,7 @@ AC_DEFUN([FF_CHECK_SIMD],
 		   BACKUP_CXXFLAGS=${CXXFLAGS}
 		   SSEFLAGS="-msse4.1"
 		   CXXFLAGS="${BACKUP_CXXFLAGS} ${SSEFLAGS}"
-		   CODE_SSE=`cat macros/CodeChunk/sse.C`
+		   CODE_SSE=`cat ${srcdir}/macros/CodeChunk/sse.C`
 		   AC_TRY_RUN([ ${CODE_SSE} ],
 			      [ sse_found="yes" ],
 			       [ sse_found="no" ],
@@ -66,7 +66,7 @@ AC_DEFUN([FF_CHECK_SIMD],
 		   
 		   dnl Check for AVX
 		   AC_MSG_CHECKING(for AVX)
-		   CODE_AVX=`cat macros/CodeChunk/avx.C`
+		   CODE_AVX=`cat ${srcdir}/macros/CodeChunk/avx.C`
 		   dnl Intel compilers usually do not require option to enable avx
 		   dnl Thus, we test with no option on
 		   for switch_avxflags in "" "-mavx"; do
--- origsrc/fflas-ffpack-2.4.0/macros/sse2-check.m4	2019-05-11 00:26:53.000000000 +0900
+++ src/fflas-ffpack-2.4.0/macros/sse2-check.m4	2019-05-31 17:50:14.704928000 +0900
@@ -34,7 +34,7 @@ AC_DEFUN([FF_CHECK_SSE],
 			dnl  SSEFLAGS="-msse2"
 			SSEFLAGS="-msse4.1"
 			CXXFLAGS="${BACKUP_CXXFLAGS} ${SSEFLAGS}"
-			CODE_SSE=`cat macros/CodeChunk/sse.C`
+			CODE_SSE=`cat ${srcdir}/macros/CodeChunk/sse.C`
 			AC_TRY_RUN([
 				${CODE_SSE}
 				],
