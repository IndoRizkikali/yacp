--- origsrc/libserialport/Makefile.am	2019-06-04 16:49:39.000000000 +0900
+++ src/libserialport/Makefile.am	2019-06-04 16:49:41.789829600 +0900
@@ -23,7 +23,7 @@ AM_LIBTOOLFLAGS = --silent
 GNUMAKEFLAGS = --no-print-directory
 
 # Enable more compiler warnings.
-AM_CFLAGS = -std=c99 -Wall -Wextra -pedantic -Wmissing-prototypes -Wshadow
+AM_CFLAGS = -std=gnu99 -Wall -Wextra -pedantic -Wmissing-prototypes -Wshadow
 
 lib_LTLIBRARIES = libserialport.la
 
@@ -40,6 +40,9 @@ endif
 if FREEBSD
 libserialport_la_SOURCES += freebsd.c
 endif
+if CYGWIN
+libserialport_la_SOURCES += linux.c
+endif
 
 libserialport_la_LIBADD = $(SP_LIBS)
 
--- origsrc/libserialport/configure.ac	2019-06-04 16:49:39.000000000 +0900
+++ src/libserialport/configure.ac	2019-06-04 16:49:41.811791100 +0900
@@ -75,9 +75,10 @@ AC_DEFINE_UNQUOTED([SP_LIB_VERSION_AGE],
 AC_DEFINE_UNQUOTED([SP_LIB_VERSION_STRING], ["$SP_LIB_VERSION"], [.])
 
 AM_CONDITIONAL([LINUX], [test -z "${host_os##linux*}"])
-AM_CONDITIONAL([WIN32], [test -z "${host_os##mingw*}" || test -z "${host_os##cygwin*}"])
+AM_CONDITIONAL([WIN32], [test -z "${host_os##mingw*}"])
 AM_CONDITIONAL([MACOSX], [test -z "${host_os##darwin*}"])
 AM_CONDITIONAL([FREEBSD], [test -z "${host_os##freebsd*}"])
+AM_CONDITIONAL([CYGWIN], [test -z "${host_os##cygwin*}"])
 
 AM_COND_IF([WIN32], [SP_LIBS='-lsetupapi'], [SP_LIBS=])
 AC_SUBST([SP_LIBS])
--- origsrc/libserialport/libserialport_internal.h	2019-06-04 16:49:39.000000000 +0900
+++ src/libserialport/libserialport_internal.h	2019-06-04 16:49:42.100810900 +0900
@@ -76,6 +76,10 @@
 #endif
 #endif
 
+#if defined(__CYGWIN__)
+#include <dirent.h>
+#endif
+
 /* TIOCINQ/TIOCOUTQ is not available everywhere. */
 #if !defined(TIOCINQ) && defined(FIONREAD)
 #define TIOCINQ FIONREAD
--- origsrc/libserialport/serialport.c	2019-06-04 16:49:39.000000000 +0900
+++ src/libserialport/serialport.c	2019-06-04 16:49:42.121809700 +0900
@@ -1303,6 +1303,8 @@ SP_API enum sp_return sp_output_waiting(
 	if (ClearCommError(port->hdl, &errors, &comstat) == 0)
 		RETURN_FAIL("ClearCommError() failed");
 	RETURN_INT(comstat.cbOutQue);
+#elif defined(__CYGWIN__)
+		RETURN_FAIL("TIOCOUTQ ioctl not supported on cygwin");
 #else
 	int bytes_waiting;
 	if (ioctl(port->fd, TIOCOUTQ, &bytes_waiting) < 0)
