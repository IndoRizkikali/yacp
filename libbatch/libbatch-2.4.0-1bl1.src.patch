diff -buprN -x CYGWIN-PATCHES -x aclocal.m4~ -x aclocal.m4t -x autom4te.cache -x config.cache -x config.guess -x config.log -x config.status -x config.sub -x '*SlackBuild*' -x '*.egg-info' -x '*.dll' -x '*.exe' -x '*.o' -x '*.gch' -x '*.gem' -x .gitignore -x '*.jpg' -x '*.png' -x '*.qm' -x '*.svgz' -x '*.tif' -x '*.class' -x '*.jlc' -x '*.pyc' -x '*.pyo' -x '*.mo' -x '*.gmo' -x '*.orig' -x '*.rej' -x '*.spec' -x '*.temp' -x '*~' -x '*.stackdump' -x x86_64-pc-cygwin -x omf.make -x xmldocs.make -x gnome-doc-utils.make -x gnome-doc-utils.m4 -x mate-doc-utils.make -x mate-doc-utils.m4 origsrc/libbatch/CMakeLists.txt src/libbatch/CMakeLists.txt
--- origsrc/libbatch/CMakeLists.txt	2018-05-23 16:25:22.200954100 +0900
+++ src/libbatch/CMakeLists.txt	2018-05-23 16:25:25.339006900 +0900
@@ -46,7 +46,7 @@ IF(WIN32 AND NOT CYGWIN)
   # different installation directories for LibBatchConfig.cmake:
   SET(INSTALL_CMAKE_CONFIG_DIR cmake)
 ELSE()
-  SET(INSTALL_CMAKE_CONFIG_DIR share/cmake/libbatch)
+  SET(INSTALL_CMAKE_CONFIG_DIR lib/cmake/libbatch)
 ENDIF()
 SET(INSTALL_INCLUDE_DIR include)
 
@@ -140,3 +140,9 @@ SET(CPACK_SOURCE_IGNORE_FILES /\\\\.;/CV
 SET(CPACK_SOURCE_PACKAGE_FILE_NAME ${PROJECT_NAME}-${${PROJECT_NAME}_VERSION})
 INCLUDE(CPack)
 
+SET(prefix ${CMAKE_INSTALL_PREFIX})
+SET(exec_prefix ${CMAKE_INSTALL_PREFIX})
+SET(libdir ${CMAKE_INSTALL_PREFIX}/lib)
+SET(includedir ${CMAKE_INSTALL_PREFIX}/include)
+CONFIGURE_FILE(${CMAKE_SOURCE_DIR}/libbatch.pc.in ${CMAKE_BINARY_DIR}/libbatch.pc @ONLY)
+INSTALL(FILES ${CMAKE_BINARY_DIR}/libbatch.pc DESTINATION ${CMAKE_INSTALL_PREFIX}/lib/pkgconfig)
diff -buprN -x CYGWIN-PATCHES -x aclocal.m4~ -x aclocal.m4t -x autom4te.cache -x config.cache -x config.guess -x config.log -x config.status -x config.sub -x '*SlackBuild*' -x '*.egg-info' -x '*.dll' -x '*.exe' -x '*.o' -x '*.gch' -x '*.gem' -x .gitignore -x '*.jpg' -x '*.png' -x '*.qm' -x '*.svgz' -x '*.tif' -x '*.class' -x '*.jlc' -x '*.pyc' -x '*.pyo' -x '*.mo' -x '*.gmo' -x '*.orig' -x '*.rej' -x '*.spec' -x '*.temp' -x '*~' -x '*.stackdump' -x x86_64-pc-cygwin -x omf.make -x xmldocs.make -x gnome-doc-utils.make -x gnome-doc-utils.m4 -x mate-doc-utils.make -x mate-doc-utils.m4 origsrc/libbatch/CMakeModules/FindLibbatchPython.cmake src/libbatch/CMakeModules/FindLibbatchPython.cmake
--- origsrc/libbatch/CMakeModules/FindLibbatchPython.cmake	2018-05-23 16:25:16.000000000 +0900
+++ src/libbatch/CMakeModules/FindLibbatchPython.cmake	2018-05-23 16:46:41.708779900 +0900
@@ -71,7 +71,7 @@ IF(EXISTS "${PYTHON_ROOT_DIR}")
 ENDIF()
 
 # Otherwise try the standard way (module mode, with the standard CMake Find*** macro):
-SALOME_FIND_PACKAGE(LibbatchPython PythonInterp MODULE)
+SALOME_FIND_PACKAGE(LibbatchPython PythonInterp 3 MODULE)
 SET(_found1 ${PYTHONINTERP_FOUND})
 
 IF (PYTHONINTERP_FOUND)
@@ -95,7 +95,7 @@ IF (PYTHONINTERP_FOUND)
   # Prepare call to FIND_PACKAGE(PythonLibs) and ensure priority is given to 
   # the location found for the interpreter:
   GET_FILENAME_COMPONENT(_tmp "${_python_dir}" PATH)
-  SALOME_FIND_PACKAGE(LibbatchPython PythonLibs MODULE)
+  SALOME_FIND_PACKAGE(LibbatchPython PythonLibs MODULE 3)
   # Restore variables:
   SET(LibbatchPython_FIND_VERSION_EXACT ${_old_EXACT})
   SET(LibbatchPython_FIND_VERSION "${_old_VERSION}")
diff -buprN -x CYGWIN-PATCHES -x aclocal.m4~ -x aclocal.m4t -x autom4te.cache -x config.cache -x config.guess -x config.log -x config.status -x config.sub -x '*SlackBuild*' -x '*.egg-info' -x '*.dll' -x '*.exe' -x '*.o' -x '*.gch' -x '*.gem' -x .gitignore -x '*.jpg' -x '*.png' -x '*.qm' -x '*.svgz' -x '*.tif' -x '*.class' -x '*.jlc' -x '*.pyc' -x '*.pyo' -x '*.mo' -x '*.gmo' -x '*.orig' -x '*.rej' -x '*.spec' -x '*.temp' -x '*~' -x '*.stackdump' -x x86_64-pc-cygwin -x omf.make -x xmldocs.make -x gnome-doc-utils.make -x gnome-doc-utils.m4 -x mate-doc-utils.make -x mate-doc-utils.m4 origsrc/libbatch/libbatch.pc.in src/libbatch/libbatch.pc.in
--- origsrc/libbatch/libbatch.pc.in	1970-01-01 09:00:00.000000000 +0900
+++ src/libbatch/libbatch.pc.in	2018-05-23 16:25:25.339006900 +0900
@@ -0,0 +1,10 @@
+prefix=@prefix@
+exec_prefix=@exec_prefix@
+libdir=@libdir@
+includedir=@includedir@
+
+Name: libbatch
+Description: Generic batch management library
+Version: @LIBBATCH_VERSION@
+Libs: -L${libdir} -lbatch
+Cflags: -I${includedir}
diff -buprN -x CYGWIN-PATCHES -x aclocal.m4~ -x aclocal.m4t -x autom4te.cache -x config.cache -x config.guess -x config.log -x config.status -x config.sub -x '*SlackBuild*' -x '*.egg-info' -x '*.dll' -x '*.exe' -x '*.o' -x '*.gch' -x '*.gem' -x .gitignore -x '*.jpg' -x '*.png' -x '*.qm' -x '*.svgz' -x '*.tif' -x '*.class' -x '*.jlc' -x '*.pyc' -x '*.pyo' -x '*.mo' -x '*.gmo' -x '*.orig' -x '*.rej' -x '*.spec' -x '*.temp' -x '*~' -x '*.stackdump' -x x86_64-pc-cygwin -x omf.make -x xmldocs.make -x gnome-doc-utils.make -x gnome-doc-utils.m4 -x mate-doc-utils.make -x mate-doc-utils.m4 origsrc/libbatch/misc/CMakeLists.txt src/libbatch/misc/CMakeLists.txt
--- origsrc/libbatch/misc/CMakeLists.txt	2018-05-23 16:25:16.000000000 +0900
+++ src/libbatch/misc/CMakeLists.txt	2018-05-23 16:25:25.339006900 +0900
@@ -21,4 +21,4 @@
 #
 
 INSTALL(FILES check_libbatch.m4
-        DESTINATION share/libbatch/misc)
+        DESTINATION share/aclocal)
diff -buprN -x CYGWIN-PATCHES -x aclocal.m4~ -x aclocal.m4t -x autom4te.cache -x config.cache -x config.guess -x config.log -x config.status -x config.sub -x '*SlackBuild*' -x '*.egg-info' -x '*.dll' -x '*.exe' -x '*.o' -x '*.gch' -x '*.gem' -x .gitignore -x '*.jpg' -x '*.png' -x '*.qm' -x '*.svgz' -x '*.tif' -x '*.class' -x '*.jlc' -x '*.pyc' -x '*.pyo' -x '*.mo' -x '*.gmo' -x '*.orig' -x '*.rej' -x '*.spec' -x '*.temp' -x '*~' -x '*.stackdump' -x x86_64-pc-cygwin -x omf.make -x xmldocs.make -x gnome-doc-utils.make -x gnome-doc-utils.m4 -x mate-doc-utils.make -x mate-doc-utils.m4 origsrc/libbatch/src/CMakeLists.txt src/libbatch/src/CMakeLists.txt
--- origsrc/libbatch/src/CMakeLists.txt	2018-05-23 16:25:22.585590800 +0900
+++ src/libbatch/src/CMakeLists.txt	2018-05-23 16:25:25.354639500 +0900
@@ -77,7 +77,8 @@ ENDIF (WIN32)
 
 INSTALL(TARGETS batch 
         EXPORT LibBatchTargets 
-        DESTINATION lib${LIB_SUFFIX})
+        RUNTIME DESTINATION bin
+        ARCHIVE DESTINATION lib${LIB_SUFFIX})
 INSTALL(FILES ${HDR_FILES} DESTINATION include/libbatch)
 
 IF (LIBBATCH_PYTHON_WRAPPING AND PYTHONINTERP_FOUND AND PYTHONLIBS_FOUND AND SWIG_FOUND)
