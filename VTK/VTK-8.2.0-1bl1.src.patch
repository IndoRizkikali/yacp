--- origsrc/VTK-8.2.0/IO/EnSight/vtkEnSight6BinaryReader.cxx	2019-01-31 02:15:13.000000000 +0900
+++ src/VTK-8.2.0/IO/EnSight/vtkEnSight6BinaryReader.cxx	2019-02-01 13:11:08.080527300 +0900
@@ -36,7 +36,7 @@
 #if defined(_WIN32)
 # define VTK_STAT_STRUCT struct _stat64
 # define VTK_STAT_FUNC _stat64
-#elif defined _DARWIN_FEATURE_64_BIT_INODE || defined __FreeBSD__
+#elif defined _DARWIN_FEATURE_64_BIT_INODE || defined __FreeBSD__ || defined(__CYGWIN__)
 // FreeBSD and OSX use stat
 # define VTK_STAT_STRUCT struct stat
 # define VTK_STAT_FUNC stat
--- origsrc/VTK-8.2.0/IO/EnSight/vtkEnSightGoldBinaryReader.cxx	2019-01-31 02:15:13.000000000 +0900
+++ src/VTK-8.2.0/IO/EnSight/vtkEnSightGoldBinaryReader.cxx	2019-02-01 13:15:38.611398200 +0900
@@ -37,7 +37,7 @@
 #if defined(_WIN32)
 # define VTK_STAT_STRUCT struct _stat64
 # define VTK_STAT_FUNC _stat64
-#elif defined _DARWIN_FEATURE_64_BIT_INODE || defined __FreeBSD__
+#elif defined _DARWIN_FEATURE_64_BIT_INODE || defined __FreeBSD__ || defined(__CYGWIN__)
 // FreeBSD and OSX use stat
 # define VTK_STAT_STRUCT struct stat
 # define VTK_STAT_FUNC stat
--- origsrc/VTK-8.2.0/IO/LSDyna/LSDynaFamily.cxx	2019-01-31 02:15:13.000000000 +0900
+++ src/VTK-8.2.0/IO/LSDyna/LSDynaFamily.cxx	2019-02-01 13:28:19.599319500 +0900
@@ -34,7 +34,7 @@ namespace
 // Decide which of 3 stat varieties to use: stat, stat64, __stat64
 // Usually stat uses 32 bit fields, and stat64 (with underscores in Windows) uses 64 bit fields.
 // But on OS X and FreeBSD, stat uses 64 bit fields these days.
-#if (VTK_SIZEOF_ID_TYPE == 8) && !defined(_DARWIN_FEATURE_64_BIT_INODE) && !defined(__FreeBSD__)
+#if (VTK_SIZEOF_ID_TYPE == 8) && !defined(_DARWIN_FEATURE_64_BIT_INODE) && !defined(__FreeBSD__) && !defined(__CYGWIN__)
   #ifndef _WIN32
     #define USE_STAT_64
   #else
--- origsrc/VTK-8.2.0/IO/Movie/CMakeLists.txt	2019-01-31 02:15:13.000000000 +0900
+++ src/VTK-8.2.0/IO/Movie/CMakeLists.txt	2019-02-01 14:56:23.846898400 +0900
@@ -30,6 +30,10 @@ set(vtkIOMovie_HDRS
 
 vtk_module_library(vtkIOMovie ${Module_SRCS})
 
+if(vtkIOMovie_vtkoggtheora AND CYGWIN)
+  vtk_module_link_libraries(vtkIOMovie LINK_PRIVATE ${OGG_LIBRARY})
+endif()
+
 if(WIN32 AND VTK_USE_VIDEO_FOR_WINDOWS)
   vtk_module_link_libraries(vtkIOMovie LINK_PRIVATE vfw32)
 endif()
