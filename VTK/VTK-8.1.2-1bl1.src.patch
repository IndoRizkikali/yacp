--- origsrc/VTK-8.1.2/CMake/FindNetCDF.cmake	2018-11-05 23:28:17.000000000 +0900
+++ src/VTK-8.1.2/CMake/FindNetCDF.cmake	2018-11-30 13:33:47.240016800 +0900
@@ -103,7 +103,11 @@ list (FIND NetCDF_FIND_COMPONENTS "F90"
 if (_nextcomp GREATER -1)
   set (NETCDF_F90 1)
 endif ()
-NetCDF_check_interface (CXX netcdfcpp.h netcdf_c++)
+if (CYGWIN)
+  NetCDF_check_interface (CXX netcdf netcdf_c++4)
+else()
+  NetCDF_check_interface (CXX netcdfcpp.h netcdf_c++)
+endif()
 NetCDF_check_interface (F77 netcdf.inc  netcdff)
 NetCDF_check_interface (F90 netcdf.mod  netcdff)
 
--- origsrc/VTK-8.1.2/IO/EnSight/vtkEnSight6BinaryReader.cxx	2018-11-05 23:28:17.000000000 +0900
+++ src/VTK-8.1.2/IO/EnSight/vtkEnSight6BinaryReader.cxx	2018-11-30 10:02:01.461336100 +0900
@@ -40,6 +40,9 @@
 // FreeBSD and OSX now deprecate stat64
 # define VTK_STAT_STRUCT struct stat
 # define VTK_STAT_FUNC stat
+#elif defined(__CYGWIN__)
+# define VTK_STAT_STRUCT struct stat
+# define VTK_STAT_FUNC stat
 #else
 // here, we're relying on _FILE_OFFSET_BITS defined in vtkWin32Header.h to help
 // us on POSIX without resorting to using stat64.
--- origsrc/VTK-8.1.2/IO/EnSight/vtkEnSightGoldBinaryReader.cxx	2018-11-05 23:28:17.000000000 +0900
+++ src/VTK-8.1.2/IO/EnSight/vtkEnSightGoldBinaryReader.cxx	2018-11-30 10:02:01.478339200 +0900
@@ -41,6 +41,9 @@
 // FreeBSD and OSX now deprecate stat64
 # define VTK_STAT_STRUCT struct stat
 # define VTK_STAT_FUNC stat
+#elif defined(__CYGWIN__)
+# define VTK_STAT_STRUCT struct stat
+# define VTK_STAT_FUNC stat
 #else
 // here, we're relying on _FILE_OFFSET_BITS defined in vtkWin32Header.h to help
 // us on POSIX without resorting to using stat64.
--- origsrc/VTK-8.1.2/IO/LSDyna/private/LSDynaFamily.cxx	2018-11-05 23:28:17.000000000 +0900
+++ src/VTK-8.1.2/IO/LSDyna/private/LSDynaFamily.cxx	2018-11-30 10:02:01.531266600 +0900
@@ -34,7 +34,7 @@ namespace
 // Decide which of 3 stat varieties to use: stat, stat64, __stat64
 // Usually stat uses 32 bit fields, and stat64 (with underscores in Windows) uses 64 bit fields.
 // But on OS X and FreeBSD, stat uses 64 bit fields these days.
-#if (VTK_SIZEOF_ID_TYPE == 8) && !defined(_DARWIN_FEATURE_64_BIT_INODE) && !defined(__FreeBSD__)
+#if (VTK_SIZEOF_ID_TYPE == 8) && !defined(_DARWIN_FEATURE_64_BIT_INODE) && !defined(__FreeBSD__) && !defined(__CYGWIN__)
   #ifndef _WIN32
     #define USE_STAT_64
   #else
--- origsrc/VTK-8.1.2/ThirdParty/netcdfcpp/vtk_netcdfcpp.h.in	2018-11-05 23:28:17.000000000 +0900
+++ src/VTK-8.1.2/ThirdParty/netcdfcpp/vtk_netcdfcpp.h.in	2018-11-30 18:38:05.550710700 +0900
@@ -18,7 +18,11 @@
 /* Use the netcdfcpp library configured for VTK.  */
 #cmakedefine VTK_USE_SYSTEM_NETCDFCPP
 #ifdef VTK_USE_SYSTEM_NETCDFCPP
-# include <netcdfcpp.h>
+# if defined(__CYGWIN__)
+#  include <netcdf>
+# else
+#  include <netcdfcpp.h>
+# endif
 #else
 # include <vtknetcdfcpp/netcdfcpp.h>
 #endif
--- origsrc/VTK-8.1.2/ThirdParty/sqlite/vtksqlite/vtk_sqlite3.c	2018-11-05 23:28:17.000000000 +0900
+++ src/VTK-8.1.2/ThirdParty/sqlite/vtksqlite/vtk_sqlite3.c	2018-11-30 10:02:01.573209200 +0900
@@ -7858,7 +7858,7 @@ VTK_SQLITE_PRIVATE void vtk_sqlite3PCach
 #if !defined(VTK_SQLITE_OS_UNIX) && !defined(VTK_SQLITE_OS_OTHER)
 # define VTK_SQLITE_OS_OTHER 0
 # ifndef VTK_SQLITE_OS_WIN
-#   if defined(_WIN32) || defined(WIN32) || defined(__CYGWIN__) || defined(__MINGW32__) || defined(__BORLANDC__)
+#   if defined(_WIN32) || defined(WIN32) || defined(__MINGW32__) || defined(__BORLANDC__)
 #     define VTK_SQLITE_OS_WIN 1
 #     define VTK_SQLITE_OS_UNIX 0
 #     define VTK_SQLITE_OS_OS2 0
