--- origsrc/azure-c-shared-utility-1.1.5/CMakeLists.txt	2018-06-16 07:30:11.000000000 +0900
+++ src/azure-c-shared-utility-1.1.5/CMakeLists.txt	2018-06-25 11:01:51.803232900 +0900
@@ -377,6 +377,9 @@ if(${build_as_dynamic})
     #make sure we can link as dll/so
     add_library(aziotsharedutil_dll SHARED ./src/aziotsharedutil.def ${source_c_files} ${source_h_files})
     set_target_properties(aziotsharedutil_dll PROPERTIES OUTPUT_NAME "aziotsharedutil")
+    if (CYGWIN)
+        set_target_properties(aziotsharedutil_dll PROPERTIES SOVERSION 0)
+    endif()
 endif()
 
 set(aziotsharedutil_target_libs)
@@ -533,7 +536,11 @@ if(${use_installed_dependencies})
     endif()
 
     # Install Azure C Shared Utility
+    if (CYGWIN)
+        set(package_location "${CMAKE_INSTALL_LIBDIR}/cmake/azure-c-shared-utility")
+    else()
     set(package_location "cmake")
+    endif()
     
     if(${build_as_dynamic})
         set(targets aziotsharedutil aziotsharedutil_dll)
@@ -542,7 +549,6 @@ if(${use_installed_dependencies})
     endif(${build_as_dynamic})
     
     install (TARGETS ${targets} EXPORT aziotsharedutilTargets
-        LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR}
         ARCHIVE DESTINATION ${CMAKE_INSTALL_LIBDIR}
         RUNTIME DESTINATION ${CMAKE_INSTALL_LIBDIR}/../bin
         INCLUDES DESTINATION ${CMAKE_INSTALL_INCLUDEDIR}/azureiot
--- origsrc/azure-c-shared-utility-1.1.5/adapters/socketio_berkeley.c	2018-06-16 07:30:11.000000000 +0900
+++ src/azure-c-shared-utility-1.1.5/adapters/socketio_berkeley.c	2018-06-25 11:01:52.053233300 +0900
@@ -594,12 +594,15 @@ static int set_target_network_interface(
             LogError("Did not find a network interface matching MAC ADDRESS");
             result = __FAILURE__;
         }
-        else if (setsockopt(socket, SOL_SOCKET, SO_BINDTODEVICE, current_nid->name, strlen(current_nid->name)) != 0)
+        else
+#if defined(SO_BINDTODEVICE)
+        if (setsockopt(socket, SOL_SOCKET, SO_BINDTODEVICE, current_nid->name, strlen(current_nid->name)) != 0)
         {
             LogError("setsockopt failed (%d)", errno);
             result = __FAILURE__;
         }
         else
+#endif
         {
             result = 0;
         }
@@ -1083,16 +1086,18 @@ int socketio_setoption(CONCRETE_IO_HANDL
         {
 #ifdef __APPLE__
             result = setsockopt(socket_io_instance->socket, IPPROTO_TCP, TCP_KEEPALIVE, value, sizeof(int));
-#else
+#elif defined(TCP_KEEPIDLE)
             result = setsockopt(socket_io_instance->socket, SOL_TCP, TCP_KEEPIDLE, value, sizeof(int));
 #endif
             if (result == -1) result = errno;
         }
+#if defined(TCP_KEEPINTVL)
         else if (strcmp(optionName, "tcp_keepalive_interval") == 0)
         {
             result = setsockopt(socket_io_instance->socket, SOL_TCP, TCP_KEEPINTVL, value, sizeof(int));
             if (result == -1) result = errno;
         }
+#endif
         else if (strcmp(optionName, OPTION_NET_INT_MAC_ADDRESS) == 0)
         {
 #ifdef __APPLE__
--- origsrc/azure-c-shared-utility-1.1.5/configs/azure_iot_build_rules.cmake	2018-06-16 07:30:11.000000000 +0900
+++ src/azure-c-shared-utility-1.1.5/configs/azure_iot_build_rules.cmake	2018-06-25 11:01:52.115733800 +0900
@@ -77,8 +77,10 @@ if(MSVC)
         set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} /W4")
     endif()
 elseif(UNIX) #LINUX OR APPLE
+    if (NOT CYGWIN)
     set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Werror")
     set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -Werror")
+    endif()
     if(NOT (IN_OPENWRT OR APPLE))
         set (CMAKE_C_FLAGS "-D_POSIX_C_SOURCE=200112L ${CMAKE_C_FLAGS}")
     endif()
@@ -180,7 +182,7 @@ IF((WIN32) AND (NOT(MINGW)))
     # Make warning as error
     add_definitions(/WX)
     ENDIF()
-ELSE()
+ELSEIF(NOT CYGWIN)
     # Make warning as error
     set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Werror")
     set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -Werror")
