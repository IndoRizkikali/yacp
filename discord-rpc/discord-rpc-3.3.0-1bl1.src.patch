diff -buprN -x CYGWIN-PATCHES -x aclocal.m4~ -x aclocal.m4t -x autom4te.cache -x config.cache -x config.guess -x config.log -x config.status -x config.sub -x '*SlackBuild*' -x '*.egg-info' -x '*.dll' -x '*.exe' -x '*.o' -x '*.gch' -x '*.gem' -x .gitignore -x '*.jpg' -x '*.png' -x '*.qm' -x '*.svgz' -x '*.tif' -x '*.class' -x '*.jlc' -x '*.pyc' -x '*.pyo' -x '*.mo' -x '*.gmo' -x '*.orig' -x '*.rej' -x '*.spec' -x '*.temp' -x '*~' -x '*.stackdump' -x x86_64-pc-cygwin -x omf.make -x xmldocs.make -x gnome-doc-utils.make -x gnome-doc-utils.m4 -x mate-doc-utils.make -x mate-doc-utils.m4 origsrc/discord-rpc-3.3.0/CMakeLists.txt src/discord-rpc-3.3.0/CMakeLists.txt
--- origsrc/discord-rpc-3.3.0/CMakeLists.txt	2018-04-17 02:25:44.000000000 +0900
+++ src/discord-rpc-3.3.0/CMakeLists.txt	2018-05-18 10:23:14.654710300 +0900
@@ -26,14 +26,15 @@ if (CLANG_FORMAT_CMD)
     )
 endif(CLANG_FORMAT_CMD)
 
-# thirdparty stuff
-execute_process(
+if (NOT CYGWIN)
+    # thirdparty stuff
+    execute_process(
     COMMAND mkdir ${CMAKE_CURRENT_SOURCE_DIR}/thirdparty
     ERROR_QUIET
-)
+    )
 
-find_file(RAPIDJSONTEST NAMES rapidjson rapidjson-1.1.0 PATHS ${CMAKE_CURRENT_SOURCE_DIR}/thirdparty CMAKE_FIND_ROOT_PATH_BOTH)
-if (NOT RAPIDJSONTEST)
+    find_file(RAPIDJSONTEST NAMES rapidjson rapidjson-1.1.0 PATHS ${CMAKE_CURRENT_SOURCE_DIR}/thirdparty CMAKE_FIND_ROOT_PATH_BOTH)
+    if (NOT RAPIDJSONTEST)
     message("no rapidjson, download")
     set(RJ_TAR_FILE ${CMAKE_CURRENT_SOURCE_DIR}/thirdparty/v1.1.0.tar.gz)
     file(DOWNLOAD https://github.com/miloyip/rapidjson/archive/v1.1.0.tar.gz ${RJ_TAR_FILE})
@@ -42,11 +43,12 @@ if (NOT RAPIDJSONTEST)
         WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/thirdparty
     )
     file(REMOVE ${RJ_TAR_FILE})
-endif(NOT RAPIDJSONTEST)
+    endif(NOT RAPIDJSONTEST)
 
-find_file(RAPIDJSON NAMES rapidjson rapidjson-1.1.0 PATHS ${CMAKE_CURRENT_SOURCE_DIR}/thirdparty CMAKE_FIND_ROOT_PATH_BOTH)
+    find_file(RAPIDJSON NAMES rapidjson rapidjson-1.1.0 PATHS ${CMAKE_CURRENT_SOURCE_DIR}/thirdparty CMAKE_FIND_ROOT_PATH_BOTH)
 
-add_library(rapidjson STATIC IMPORTED ${RAPIDJSON})
+    add_library(rapidjson STATIC IMPORTED ${RAPIDJSON})
+endif()
 
 # add subdirs
 
@@ -54,3 +56,10 @@ add_subdirectory(src)
 if (BUILD_EXAMPLES)
     add_subdirectory(examples/send-presence)
 endif(BUILD_EXAMPLES)
+
+SET(prefix ${CMAKE_INSTALL_PREFIX})
+SET(exec_prefix ${CMAKE_INSTALL_PREFIX})
+SET(libdir ${CMAKE_INSTALL_PREFIX}/lib)
+SET(includedir ${CMAKE_INSTALL_PREFIX}/include)
+CONFIGURE_FILE(${CMAKE_SOURCE_DIR}/discord-rpc.pc.in ${CMAKE_BINARY_DIR}/discord-rpc.pc @ONLY)
+INSTALL(FILES ${CMAKE_BINARY_DIR}/discord-rpc.pc DESTINATION ${CMAKE_INSTALL_PREFIX}/lib/pkgconfig)
diff -buprN -x CYGWIN-PATCHES -x aclocal.m4~ -x aclocal.m4t -x autom4te.cache -x config.cache -x config.guess -x config.log -x config.status -x config.sub -x '*SlackBuild*' -x '*.egg-info' -x '*.dll' -x '*.exe' -x '*.o' -x '*.gch' -x '*.gem' -x .gitignore -x '*.jpg' -x '*.png' -x '*.qm' -x '*.svgz' -x '*.tif' -x '*.class' -x '*.jlc' -x '*.pyc' -x '*.pyo' -x '*.mo' -x '*.gmo' -x '*.orig' -x '*.rej' -x '*.spec' -x '*.temp' -x '*~' -x '*.stackdump' -x x86_64-pc-cygwin -x omf.make -x xmldocs.make -x gnome-doc-utils.make -x gnome-doc-utils.m4 -x mate-doc-utils.make -x mate-doc-utils.m4 origsrc/discord-rpc-3.3.0/discord-rpc.pc.in src/discord-rpc-3.3.0/discord-rpc.pc.in
--- origsrc/discord-rpc-3.3.0/discord-rpc.pc.in	1970-01-01 09:00:00.000000000 +0900
+++ src/discord-rpc-3.3.0/discord-rpc.pc.in	2018-05-18 10:23:14.671279300 +0900
@@ -0,0 +1,10 @@
+prefix=@prefix@
+exec_prefix=@exec_prefix@
+libdir=@libdir@
+includedir=@includedir@
+
+Name: discord-rpc
+Description: Library for interfacing your game with a locally running Discord desktop client
+Version: @VERSION@
+Libs: -L${libdir} -ldiscord-rpc
+Cflags: -I${includedir}
diff -buprN -x CYGWIN-PATCHES -x aclocal.m4~ -x aclocal.m4t -x autom4te.cache -x config.cache -x config.guess -x config.log -x config.status -x config.sub -x '*SlackBuild*' -x '*.egg-info' -x '*.dll' -x '*.exe' -x '*.o' -x '*.gch' -x '*.gem' -x .gitignore -x '*.jpg' -x '*.png' -x '*.qm' -x '*.svgz' -x '*.tif' -x '*.class' -x '*.jlc' -x '*.pyc' -x '*.pyo' -x '*.mo' -x '*.gmo' -x '*.orig' -x '*.rej' -x '*.spec' -x '*.temp' -x '*~' -x '*.stackdump' -x x86_64-pc-cygwin -x omf.make -x xmldocs.make -x gnome-doc-utils.make -x gnome-doc-utils.m4 -x mate-doc-utils.make -x mate-doc-utils.m4 origsrc/discord-rpc-3.3.0/src/CMakeLists.txt src/discord-rpc-3.3.0/src/CMakeLists.txt
--- origsrc/discord-rpc-3.3.0/src/CMakeLists.txt	2018-04-17 02:25:44.000000000 +0900
+++ src/discord-rpc-3.3.0/src/CMakeLists.txt	2018-05-18 10:23:14.686720500 +0900
@@ -71,6 +71,9 @@ if(UNIX)
 
     add_library(discord-rpc ${BASE_RPC_SRC})
     target_link_libraries(discord-rpc PUBLIC pthread)
+    if (CYGWIN)
+        set_target_properties(discord-rpc PROPERTIES SOVERSION 0)
+    else ()
     target_compile_options(discord-rpc PRIVATE
         -g
         -Wall
@@ -91,13 +94,16 @@ if(UNIX)
     if (${BUILD_SHARED_LIBS})
         target_compile_options(discord-rpc PRIVATE -fPIC)
     endif (${BUILD_SHARED_LIBS})
+    endif()
 
     if (APPLE)
         target_link_libraries(discord-rpc PRIVATE "-framework AppKit")
     endif (APPLE)
 endif(UNIX)
 
-target_include_directories(discord-rpc PRIVATE ${RAPIDJSON}/include)
+if (NOT CYGWIN)
+    target_include_directories(discord-rpc PRIVATE ${RAPIDJSON}/include)
+endif()
 
 if (NOT ${ENABLE_IO_THREAD})
     target_compile_definitions(discord-rpc PUBLIC -DDISCORD_DISABLE_IO_THREAD)
