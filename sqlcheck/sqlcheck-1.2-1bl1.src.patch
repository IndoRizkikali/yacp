--- origsrc/sqlcheck-1.2/CMakeLists.txt	2017-09-15 13:37:00.000000000 +0900
+++ src/sqlcheck-1.2/CMakeLists.txt	2019-01-22 17:04:24.387810700 +0900
@@ -39,7 +39,7 @@ endif ()
 # ---[ C++11 Flags
 include(CheckCXXCompilerFlag)
 CHECK_CXX_COMPILER_FLAG("-std=c++11" COMPILER_SUPPORTS_CXX11)
-if(COMPILER_SUPPORTS_CXX11)
+if(COMPILER_SUPPORTS_CXX11 AND NOT CYGWIN)
 	set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++11")
 else()
     message(STATUS "The compiler ${CMAKE_CXX_COMPILER} has no C++11 support. Please use a different C++ compiler.")
@@ -50,30 +50,38 @@ set(CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_F
 
 # -- [ GTest
 enable_testing()
-set(GOOGLETEST_ROOT external/googletest/googletest CACHE STRING "Google Test source root")
-include_directories(
-    ${PROJECT_SOURCE_DIR}/${GOOGLETEST_ROOT}
-    ${PROJECT_SOURCE_DIR}/${GOOGLETEST_ROOT}/include
-    )
-set(GOOGLETEST_SOURCES
-    ${PROJECT_SOURCE_DIR}/${GOOGLETEST_ROOT}/src/gtest-all.cc
-    ${PROJECT_SOURCE_DIR}/${GOOGLETEST_ROOT}/src/gtest_main.cc
-    )
-foreach(_source ${GOOGLETEST_SOURCES})
-    set_source_files_properties(${_source} PROPERTIES GENERATED 1)
-endforeach()
+if (CYGWIN)
+    find_package(GTest REQUIRED)
+else()
+    set(GOOGLETEST_ROOT external/googletest/googletest CACHE STRING "Google Test source root")
+    include_directories(
+        ${PROJECT_SOURCE_DIR}/${GOOGLETEST_ROOT}
+        ${PROJECT_SOURCE_DIR}/${GOOGLETEST_ROOT}/include
+        )
+    set(GOOGLETEST_SOURCES
+        ${PROJECT_SOURCE_DIR}/${GOOGLETEST_ROOT}/src/gtest-all.cc
+        ${PROJECT_SOURCE_DIR}/${GOOGLETEST_ROOT}/src/gtest_main.cc
+        )
+    foreach(_source ${GOOGLETEST_SOURCES})
+        set_source_files_properties(${_source} PROPERTIES GENERATED 1)
+    endforeach()
 
-add_library(googletest ${GOOGLETEST_SOURCES})
+    add_library(googletest ${GOOGLETEST_SOURCES})
+endif()
 
 # -- [ GFlags
 
-set(GFLAGS_ROOT external/gflags CACHE STRING "Google Flags")
+if (CYGWIN)
+    find_package(gflags REQUIRED)
+else()
+    set(GFLAGS_ROOT external/gflags CACHE STRING "Google Flags")
 
-add_subdirectory(${PROJECT_SOURCE_DIR}/${GFLAGS_ROOT})
+    add_subdirectory(${PROJECT_SOURCE_DIR}/${GFLAGS_ROOT})
 
-include_directories(
-    ${PROJECT_BINARY_DIR}/${GFLAGS_ROOT}/include
-)
+    include_directories(
+        ${PROJECT_BINARY_DIR}/${GFLAGS_ROOT}/include
+    )
+endif()
 
 # --[ Threads
 
--- origsrc/sqlcheck-1.2/test/CMakeLists.txt	2017-09-15 13:37:00.000000000 +0900
+++ src/sqlcheck-1.2/test/CMakeLists.txt	2019-01-22 17:06:15.232757500 +0900
@@ -9,7 +9,6 @@ include_directories (${CMAKE_SOURCE_DIR}
 add_executable(test_suite test_suite.cpp)
 target_link_libraries(test_suite sqlcheck_library 
 ${GTEST_BOTH_LIBRARIES} 
-googletest
 ${GLOG_LIBRARIES} 
 ${CMAKE_THREAD_LIBS_INIT}
 )
