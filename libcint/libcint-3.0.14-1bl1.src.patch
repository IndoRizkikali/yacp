--- origsrc/libcint-3.0.14/CMakeLists.txt	2018-11-23 18:13:22.000000000 +0900
+++ src/libcint-3.0.14/CMakeLists.txt	2019-01-23 17:18:28.839779100 +0900
@@ -102,12 +102,15 @@ add_library(cint ${cintSrc})
 set_target_properties(cint PROPERTIES
   VERSION ${cint_VERSION}
   LIBRARY_OUTPUT_DIRECTORY ${PROJECT_BINARY_DIR})
+if(CYGWIN)
+  set_target_properties(cint PROPERTIES SOVERSION 0)
+endif()
 target_link_libraries(cint ${BLAS_LIBRARIES})
 if(QUADMATH_FOUND)
   target_link_libraries(cint quadmath)
 endif()
 
-install(TARGETS cint DESTINATION ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_LIBDIR})
+install(TARGETS cint RUNTIME DESTINATION ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_BINDIR} ARCHIVE DESTINATION ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_LIBDIR})
 install(FILES ${PROJECT_BINARY_DIR}/include/cint.h DESTINATION ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_INCLUDEDIR})
 
 if(ENABLE_EXAMPLE)
@@ -132,3 +135,6 @@ if(BUILD_SHARED_LIBS AND ENABLE_TEST)
       COMMAND ${PYTHON_EXECUTABLE} ${PROJECT_SOURCE_DIR}/testsuite/test_3c2e.py ${RUN_QUICK_TEST})
   endif()
 endif()
+
+CONFIGURE_FILE(${CMAKE_SOURCE_DIR}/libcint.pc.in ${CMAKE_BINARY_DIR}/libcint.pc @ONLY)
+INSTALL(FILES ${CMAKE_BINARY_DIR}/libcint.pc DESTINATION ${CMAKE_INSTALL_PREFIX}/lib/pkgconfig)
--- origsrc/libcint-3.0.14/examples/time_c2h6.c	2018-11-23 18:13:22.000000000 +0900
+++ src/libcint-3.0.14/examples/time_c2h6.c	2019-01-23 17:18:28.847862500 +0900
@@ -716,9 +716,15 @@ void run_all(int *atm, int natm, int *ba
 
         printf("\tcint2e_sph without optimizer: total num ERI = %.2e\n", tot);
         pct = 0; count = 0;
+#if defined(__CYGWIN__)
+#pragma omp parallel default(none) \
+        shared(atm, natm, bas, nbas, env, ishls, jshls, non_opt, time0, pct, count) \
+        private(di, dj, dk, dl, i, j, k, l, ij, kl, kl_max, shls, buf, time1)
+#else
 #pragma omp parallel default(none) \
         shared(atm, natm, bas, nbas, env, ishls, jshls, non_opt, time0, pct, count, stdout) \
         private(di, dj, dk, dl, i, j, k, l, ij, kl, kl_max, shls, buf, time1)
+#endif
 #pragma omp for nowait schedule(dynamic, 2)
         for (ij = 0; ij < nbas*(nbas+1)/2; ij++) {
                 i = ishls[ij];
@@ -757,9 +763,15 @@ void run_all(int *atm, int natm, int *ba
         printf("\tcint2e_sph with optimizer: total num ERI = %.2e\n", tot);
         pct = 0; count = 0;
 
+#if defined(__CYGWIN__)
+#pragma omp parallel default(none) \
+        shared(atm, natm, bas, nbas, env, ishls, jshls, opt_for_cint2e, time0, pct, count) \
+        private(di, dj, dk, dl, i, j, k, l, ij, kl, kl_max, shls, buf, time1)
+#else
 #pragma omp parallel default(none) \
         shared(atm, natm, bas, nbas, env, ishls, jshls, opt_for_cint2e, time0, pct, count, stdout) \
         private(di, dj, dk, dl, i, j, k, l, ij, kl, kl_max, shls, buf, time1)
+#endif
 #pragma omp for nowait schedule(dynamic, 2)
         for (ij = 0; ij < nbas*(nbas+1)/2; ij++) {
                 i = ishls[ij];
@@ -799,9 +811,15 @@ void run_all(int *atm, int natm, int *ba
         tot = (double)ncgto*ncgto*ncgto*ncgto/2*3;
         printf("\tGradients with optimizer: total num ERI = %.2e\n", tot);
         pct = 0; count = 0;
+#if defined(__CYGWIN__)
+#pragma omp parallel default(none) \
+        shared(atm, natm, bas, nbas, env, ishls, jshls, opt_for_ip1, time0, pct, count) \
+        private(di, dj, dk, dl, i, j, k, l, ij, kl, shls, buf, time1)
+#else
 #pragma omp parallel default(none) \
         shared(atm, natm, bas, nbas, env, ishls, jshls, opt_for_ip1, time0, pct, count, stdout) \
         private(di, dj, dk, dl, i, j, k, l, ij, kl, shls, buf, time1)
+#endif
 #pragma omp for nowait schedule(dynamic, 2)
         for (ij = 0; ij < nbas*nbas; ij++) {
                 i = ij / nbas;
--- origsrc/libcint-3.0.14/examples/time_c60.c	2018-11-23 18:13:22.000000000 +0900
+++ src/libcint-3.0.14/examples/time_c60.c	2019-01-23 17:18:28.860183000 +0900
@@ -193,9 +193,15 @@ void run_all(int *atm, int natm, int *ba
         cint2e_sph_optimizer(&opt, atm, natm, bas, nbas, env);
 
         pct = 0; count = 0;
+#if defined(__CYGWIN__)
+#pragma omp parallel default(none) \
+        shared(atm, natm, bas, nbas, env, ishls, jshls, opt, time0, pct, count) \
+        private(di, dj, dk, dl, i, j, k, l, ij, kl, kl_max, shls, buf, time1)
+#else
 #pragma omp parallel default(none) \
         shared(atm, natm, bas, nbas, env, ishls, jshls, opt, time0, pct, count, stdout) \
         private(di, dj, dk, dl, i, j, k, l, ij, kl, kl_max, shls, buf, time1)
+#endif
 #pragma omp for nowait schedule(dynamic, 2)
         for (ij = 0; ij < nbas*(nbas+1)/2; ij++) {
                 i = ishls[ij];
--- origsrc/libcint-3.0.14/libcint.pc.in	1970-01-01 09:00:00.000000000 +0900
+++ src/libcint-3.0.14/libcint.pc.in	2019-01-23 17:18:28.880701100 +0900
@@ -0,0 +1,5 @@
+Name: libcint
+Description: General GTO integrals for quantum chemistry
+Version: @cint_VERSION@
+Libs: -L@CMAKE_INSTALL_PREFIX@/lib -lcint
+Cflags: -I@CMAKE_INSTALL_PREFIX@/include
--- origsrc/libcint-3.0.14/src/c2f.h	2018-11-23 18:13:22.000000000 +0900
+++ src/libcint-3.0.14/src/c2f.h	2019-01-23 17:18:28.888375100 +0900
@@ -5,6 +5,8 @@
 
 #include "config.h"
 
+#include <stdint.h>
+
 #define ALL_CINT_FORTRAN_(NAME) \
 FINT c##NAME##_sph_(double *out, FINT *shls, FINT *atm, FINT *natm, \
                     FINT *bas, FINT *nbas, double *env, size_t optptr_as_integer8) { \
