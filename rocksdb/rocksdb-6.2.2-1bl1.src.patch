--- origsrc/rocksdb-6.2.2/CMakeLists.txt	2019-06-08 08:23:07.000000000 +0900
+++ src/rocksdb-6.2.2/CMakeLists.txt	2019-08-26 13:24:17.482638100 +0900
@@ -462,7 +462,9 @@ endif()
 
 include_directories(${PROJECT_SOURCE_DIR})
 include_directories(${PROJECT_SOURCE_DIR}/include)
-include_directories(SYSTEM ${PROJECT_SOURCE_DIR}/third-party/gtest-1.7.0/fused-src)
+if(NOT CYGWIN)
+  include_directories(SYSTEM ${PROJECT_SOURCE_DIR}/third-party/gtest-1.7.0/fused-src)
+endif()
 find_package(Threads REQUIRED)
 
 # Main library source code
@@ -753,9 +755,11 @@ else()
                         OUTPUT_NAME "rocksdb")
 endif()
 
-add_library(${ROCKSDB_STATIC_LIB} STATIC ${SOURCES})
-target_link_libraries(${ROCKSDB_STATIC_LIB}
-  ${THIRDPARTY_LIBS} ${SYSTEM_LIBS})
+if(NOT BUILD_SHARED_LIBS)
+  add_library(${ROCKSDB_STATIC_LIB} STATIC ${SOURCES})
+  target_link_libraries(${ROCKSDB_STATIC_LIB}
+    ${THIRDPARTY_LIBS} ${SYSTEM_LIBS})
+endif()
 
 if(WIN32)
   add_library(${ROCKSDB_IMPORT_LIB} SHARED ${SOURCES})
@@ -809,13 +813,15 @@ if(NOT WIN32 OR ROCKSDB_INSTALL_ON_WINDO
 
   install(DIRECTORY include/rocksdb COMPONENT devel DESTINATION "${CMAKE_INSTALL_INCLUDEDIR}")
 
-  install(
-    TARGETS ${ROCKSDB_STATIC_LIB}
-    EXPORT RocksDBTargets
-    COMPONENT devel
-    ARCHIVE DESTINATION "${CMAKE_INSTALL_LIBDIR}"
-    INCLUDES DESTINATION "${CMAKE_INSTALL_INCLUDEDIR}"
-  )
+  if(NOT BUILD_SHARED_LIBS)
+    install(
+      TARGETS ${ROCKSDB_STATIC_LIB}
+      EXPORT RocksDBTargets
+      COMPONENT devel
+      ARCHIVE DESTINATION "${CMAKE_INSTALL_LIBDIR}"
+      INCLUDES DESTINATION "${CMAKE_INSTALL_INCLUDEDIR}"
+    )
+  endif()
 
   install(
     TARGETS ${ROCKSDB_SHARED_LIB}
@@ -845,7 +851,9 @@ endif()
 
 option(WITH_TESTS "build with tests" ON)
 if(WITH_TESTS)
-  add_subdirectory(third-party/gtest-1.7.0/fused-src/gtest)
+  if(NOT CYGWIN)
+    add_subdirectory(third-party/gtest-1.7.0/fused-src/gtest)
+  endif()
   set(TESTS
         cache/cache_test.cc
         cache/lru_cache_test.cc
@@ -1070,3 +1078,10 @@ option(WITH_TOOLS "build with tools" ON)
 if(WITH_TOOLS)
   add_subdirectory(tools)
 endif()
+
+SET(prefix ${CMAKE_INSTALL_PREFIX})
+SET(exec_prefix ${CMAKE_INSTALL_PREFIX})
+SET(libdir ${CMAKE_INSTALL_PREFIX}/lib)
+SET(includedir ${CMAKE_INSTALL_PREFIX}/include)
+CONFIGURE_FILE(${CMAKE_SOURCE_DIR}/rocksdb.pc.in ${CMAKE_BINARY_DIR}/rocksdb.pc @ONLY)
+INSTALL(FILES ${CMAKE_BINARY_DIR}/rocksdb.pc DESTINATION ${CMAKE_INSTALL_PREFIX}/lib/pkgconfig)
--- origsrc/rocksdb-6.2.2/db/db_impl.cc	2019-06-08 08:23:07.000000000 +0900
+++ src/rocksdb-6.2.2/db/db_impl.cc	2019-08-26 11:08:23.485342500 +0900
@@ -12,7 +12,7 @@
 #define __STDC_FORMAT_MACROS
 #endif
 #include <stdint.h>
-#ifdef OS_SOLARIS
+#if defined(OS_SOLARIS) || defined(__CYGWIN__)
 #include <alloca.h>
 #endif
 
--- origsrc/rocksdb-6.2.2/db/db_wal_test.cc	2019-06-08 08:23:07.000000000 +0900
+++ src/rocksdb-6.2.2/db/db_wal_test.cc	2019-08-26 11:08:43.510806100 +0900
@@ -7,6 +7,8 @@
 // Use of this source code is governed by a BSD-style license that can be
 // found in the LICENSE file. See the AUTHORS file for names of contributors.
 
+#include <alloca.h>
+
 #include "db/db_test_util.h"
 #include "options/options_helper.h"
 #include "port/port.h"
--- origsrc/rocksdb-6.2.2/env/env_test.cc	2019-06-08 08:23:07.000000000 +0900
+++ src/rocksdb-6.2.2/env/env_test.cc	2019-08-26 11:09:40.548927700 +0900
@@ -1255,7 +1255,7 @@ TEST_P(EnvPosixTestWithParam, Preallocat
   std::unique_ptr<WritableFile> srcfile;
   EnvOptions soptions;
   soptions.use_direct_reads = soptions.use_direct_writes = direct_io_;
-#if !defined(OS_MACOSX) && !defined(OS_WIN) && !defined(OS_SOLARIS) && !defined(OS_AIX) && !defined(OS_OPENBSD) && !defined(OS_FREEBSD)
+#if !defined(OS_MACOSX) && !defined(OS_WIN) && !defined(OS_SOLARIS) && !defined(OS_AIX) && !defined(OS_OPENBSD) && !defined(OS_FREEBSD) && !defined(__CYGWIN__)
     if (soptions.use_direct_writes) {
       rocksdb::SyncPoint::GetInstance()->SetCallBack(
           "NewWritableFile:O_DIRECT", [&](void* arg) {
@@ -1316,7 +1316,7 @@ TEST_P(EnvPosixTestWithParam, Consistent
       const std::string path =
           test::TmpDir(env_) + "/" + "testfile_" + std::to_string(i);
       std::unique_ptr<WritableFile> file;
-#if !defined(OS_MACOSX) && !defined(OS_WIN) && !defined(OS_SOLARIS) && !defined(OS_AIX) && !defined(OS_OPENBSD) && !defined(OS_FREEBSD)
+#if !defined(OS_MACOSX) && !defined(OS_WIN) && !defined(OS_SOLARIS) && !defined(OS_AIX) && !defined(OS_OPENBSD) && !defined(OS_FREEBSD) && !defined(__CYGWIN__)
       if (soptions.use_direct_writes) {
         rocksdb::SyncPoint::GetInstance()->SetCallBack(
             "NewWritableFile:O_DIRECT", [&](void* arg) {
--- origsrc/rocksdb-6.2.2/env/io_posix.h	2019-06-08 08:23:07.000000000 +0900
+++ src/rocksdb-6.2.2/env/io_posix.h	2019-08-26 11:10:21.069532900 +0900
@@ -15,7 +15,7 @@
 
 // For non linux platform, the following macros are used only as place
 // holder.
-#if !(defined OS_LINUX) && !(defined CYGWIN) && !(defined OS_AIX)
+#if !(defined OS_LINUX) && !(defined __CYGWIN__) && !(defined OS_AIX)
 #define POSIX_FADV_NORMAL 0     /* [MC1] no further special treatment */
 #define POSIX_FADV_RANDOM 1     /* [MC1] expect random page refs */
 #define POSIX_FADV_SEQUENTIAL 2 /* [MC1] expect sequential page refs */
--- origsrc/rocksdb-6.2.2/port/port_posix.h	2019-06-08 08:23:07.000000000 +0900
+++ src/rocksdb-6.2.2/port/port_posix.h	2019-08-26 11:10:46.912759600 +0900
@@ -17,7 +17,9 @@
 // in fact, we could use that one
 #define ROCKSDB_PRIszt "zu"
 
+#if !defined(__declspec)
 #define __declspec(S)
+#endif
 
 #define ROCKSDB_NOEXCEPT noexcept
 
--- origsrc/rocksdb-6.2.2/rocksdb.pc.in	1970-01-01 09:00:00.000000000 +0900
+++ src/rocksdb-6.2.2/rocksdb.pc.in	2019-08-26 13:25:45.646118000 +0900
@@ -0,0 +1,10 @@
+prefix=@prefix@
+exec_prefix=@exec_prefix@
+libdir=@libdir@
+includedir=@includedir@
+
+Name: rocksdb
+Description: Persistent Key-Value Store for Flash and RAM Storage
+Version: @ROCKSDB_VERSION@
+Libs: -L${libdir} -lrocksdb
+Cflags: -I${includedir}
--- origsrc/rocksdb-6.2.2/util/filelock_test.cc	2019-06-08 08:23:07.000000000 +0900
+++ src/rocksdb-6.2.2/util/filelock_test.cc	2019-08-26 11:11:14.820781200 +0900
@@ -8,6 +8,7 @@
 
 #include <vector>
 #include <fcntl.h>
+#include <sys/wait.h>
 #include "util/coding.h"
 #include "util/testharness.h"
 
