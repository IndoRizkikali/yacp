diff -buprN -x CYGWIN-PATCHES -x aclocal.m4~ -x aclocal.m4t -x autom4te.cache -x config.cache -x config.guess -x config.log -x config.status -x config.sub -x '*SlackBuild*' -x '*.egg-info' -x '*.dll' -x '*.exe' -x '*.o' -x '*.gch' -x '*.gem' -x .gitignore -x '*.jpg' -x '*.png' -x '*.qm' -x '*.svgz' -x '*.tif' -x '*.class' -x '*.jlc' -x '*.pyc' -x '*.pyo' -x '*.mo' -x '*.gmo' -x '*.orig' -x '*.rej' -x '*.spec' -x '*.temp' -x '*~' -x '*.stackdump' -x x86_64-pc-cygwin -x omf.make -x xmldocs.make -x gnome-doc-utils.make -x gnome-doc-utils.m4 -x mate-doc-utils.make -x mate-doc-utils.m4 origsrc/pcl-pcl-1.8.1/CMakeLists.txt src/pcl-pcl-1.8.1/CMakeLists.txt
--- origsrc/pcl-pcl-1.8.1/CMakeLists.txt	2017-08-08 15:04:14.000000000 +0900
+++ src/pcl-pcl-1.8.1/CMakeLists.txt	2018-05-29 16:55:49.477524800 +0900
@@ -283,6 +283,12 @@ endif(NOT PCL_SHARED_LIBS OR ((WIN32 AND
 find_package(FLANN 1.7.0 REQUIRED)
 include_directories(${FLANN_INCLUDE_DIRS})
 
+if (CYGWIN AND FLANN_FOUND)
+  pkg_check_modules(LIBLZ4 liblz4 REQUIRED)
+  include_directories(${LIBLZ4_INCLUDE_DIRS})
+  set(FLANN_LIBRARIES ${FLANN_LIBRARIES} ${LIBLZ4_LIBRARIES})
+endif()
+
 # libusb-1.0
 option(WITH_LIBUSB "Build USB RGBD-Camera drivers" TRUE)
 if(WITH_LIBUSB)
diff -buprN -x CYGWIN-PATCHES -x aclocal.m4~ -x aclocal.m4t -x autom4te.cache -x config.cache -x config.guess -x config.log -x config.status -x config.sub -x '*SlackBuild*' -x '*.egg-info' -x '*.dll' -x '*.exe' -x '*.o' -x '*.gch' -x '*.gem' -x .gitignore -x '*.jpg' -x '*.png' -x '*.qm' -x '*.svgz' -x '*.tif' -x '*.class' -x '*.jlc' -x '*.pyc' -x '*.pyo' -x '*.mo' -x '*.gmo' -x '*.orig' -x '*.rej' -x '*.spec' -x '*.temp' -x '*~' -x '*.stackdump' -x x86_64-pc-cygwin -x omf.make -x xmldocs.make -x gnome-doc-utils.make -x gnome-doc-utils.m4 -x mate-doc-utils.make -x mate-doc-utils.m4 origsrc/pcl-pcl-1.8.1/cmake/pcl_utils.cmake src/pcl-pcl-1.8.1/cmake/pcl_utils.cmake
--- origsrc/pcl-pcl-1.8.1/cmake/pcl_utils.cmake	2017-08-08 15:04:14.000000000 +0900
+++ src/pcl-pcl-1.8.1/cmake/pcl_utils.cmake	2018-05-30 17:42:32.556207600 +0900
@@ -115,6 +115,8 @@ macro(SET_INSTALL_DIRS)
     set(PKGCFG_INSTALL_DIR "${LIB_INSTALL_DIR}/pkgconfig")
     if(WIN32 AND NOT MINGW)
         set(PCLCONFIG_INSTALL_DIR "cmake")
+    elseif(CYGWIN)
+        set(PCLCONFIG_INSTALL_DIR "lib/cmake/${PROJECT_NAME}")
       else(WIN32 AND NOT MINGW)
         set(PCLCONFIG_INSTALL_DIR "share/${PROJECT_NAME_LOWER}-${PCL_MAJOR_VERSION}.${PCL_MINOR_VERSION}")
       endif(WIN32 AND NOT MINGW)
diff -buprN -x CYGWIN-PATCHES -x aclocal.m4~ -x aclocal.m4t -x autom4te.cache -x config.cache -x config.guess -x config.log -x config.status -x config.sub -x '*SlackBuild*' -x '*.egg-info' -x '*.dll' -x '*.exe' -x '*.o' -x '*.gch' -x '*.gem' -x .gitignore -x '*.jpg' -x '*.png' -x '*.qm' -x '*.svgz' -x '*.tif' -x '*.class' -x '*.jlc' -x '*.pyc' -x '*.pyo' -x '*.mo' -x '*.gmo' -x '*.orig' -x '*.rej' -x '*.spec' -x '*.temp' -x '*~' -x '*.stackdump' -x x86_64-pc-cygwin -x omf.make -x xmldocs.make -x gnome-doc-utils.make -x gnome-doc-utils.m4 -x mate-doc-utils.make -x mate-doc-utils.m4 origsrc/pcl-pcl-1.8.1/common/include/pcl/pcl_exports.h src/pcl-pcl-1.8.1/common/include/pcl/pcl_exports.h
--- origsrc/pcl-pcl-1.8.1/common/include/pcl/pcl_exports.h	2017-08-08 15:04:14.000000000 +0900
+++ src/pcl-pcl-1.8.1/common/include/pcl/pcl_exports.h	2018-05-30 02:00:43.047584800 +0900
@@ -39,7 +39,7 @@
 // Header 'pcl_macros' is not suitable since it inludes <Eigen/Core>,
 // which can't be eaten by nvcc (it's too weak)
 
-#if defined WIN32 || defined _WIN32 || defined WINCE || defined __MINGW32__
+#if defined WIN32 || defined _WIN32 || defined WINCE || defined __MINGW32__ || defined(__CYGWIN__)
     #ifdef PCLAPI_EXPORTS
         #define PCL_EXPORTS __declspec(dllexport)
     #else
diff -buprN -x CYGWIN-PATCHES -x aclocal.m4~ -x aclocal.m4t -x autom4te.cache -x config.cache -x config.guess -x config.log -x config.status -x config.sub -x '*SlackBuild*' -x '*.egg-info' -x '*.dll' -x '*.exe' -x '*.o' -x '*.gch' -x '*.gem' -x .gitignore -x '*.jpg' -x '*.png' -x '*.qm' -x '*.svgz' -x '*.tif' -x '*.class' -x '*.jlc' -x '*.pyc' -x '*.pyo' -x '*.mo' -x '*.gmo' -x '*.orig' -x '*.rej' -x '*.spec' -x '*.temp' -x '*~' -x '*.stackdump' -x x86_64-pc-cygwin -x omf.make -x xmldocs.make -x gnome-doc-utils.make -x gnome-doc-utils.m4 -x mate-doc-utils.make -x mate-doc-utils.m4 origsrc/pcl-pcl-1.8.1/common/include/pcl/pcl_macros.h src/pcl-pcl-1.8.1/common/include/pcl/pcl_macros.h
--- origsrc/pcl-pcl-1.8.1/common/include/pcl/pcl_macros.h	2017-08-08 15:04:14.000000000 +0900
+++ src/pcl-pcl-1.8.1/common/include/pcl/pcl_macros.h	2018-05-30 02:00:34.774617000 +0900
@@ -267,7 +267,7 @@ log2f (float x)
     #endif
 #endif
 
-#if defined WIN32 || defined _WIN32 || defined WINCE || defined __MINGW32__
+#if defined WIN32 || defined _WIN32 || defined WINCE || defined __MINGW32__ || defined(__CYGWIN__)
     #ifdef PCLAPI_EXPORTS
         #define PCL_EXPORTS __declspec(dllexport)
     #else
diff -buprN -x CYGWIN-PATCHES -x aclocal.m4~ -x aclocal.m4t -x autom4te.cache -x config.cache -x config.guess -x config.log -x config.status -x config.sub -x '*SlackBuild*' -x '*.egg-info' -x '*.dll' -x '*.exe' -x '*.o' -x '*.gch' -x '*.gem' -x .gitignore -x '*.jpg' -x '*.png' -x '*.qm' -x '*.svgz' -x '*.tif' -x '*.class' -x '*.jlc' -x '*.pyc' -x '*.pyo' -x '*.mo' -x '*.gmo' -x '*.orig' -x '*.rej' -x '*.spec' -x '*.temp' -x '*~' -x '*.stackdump' -x x86_64-pc-cygwin -x omf.make -x xmldocs.make -x gnome-doc-utils.make -x gnome-doc-utils.m4 -x mate-doc-utils.make -x mate-doc-utils.m4 origsrc/pcl-pcl-1.8.1/common/include/pcl/range_image/range_image.h src/pcl-pcl-1.8.1/common/include/pcl/range_image/range_image.h
--- origsrc/pcl-pcl-1.8.1/common/include/pcl/range_image/range_image.h	2017-08-08 15:04:14.000000000 +0900
+++ src/pcl-pcl-1.8.1/common/include/pcl/range_image/range_image.h	2018-05-30 07:22:52.978457600 +0900
@@ -784,10 +784,10 @@ namespace pcl
 
 
       // =====STATIC PROTECTED=====
-      static const int lookup_table_size;
-      static std::vector<float> asin_lookup_table;
-      static std::vector<float> atan_lookup_table;
-      static std::vector<float> cos_lookup_table;
+      PCL_EXPORTS static const int lookup_table_size;
+      PCL_EXPORTS static std::vector<float> asin_lookup_table;
+      PCL_EXPORTS static std::vector<float> atan_lookup_table;
+      PCL_EXPORTS static std::vector<float> cos_lookup_table;
       /** Create lookup tables for trigonometric functions */
       static void
       createLookupTables ();
diff -buprN -x CYGWIN-PATCHES -x aclocal.m4~ -x aclocal.m4t -x autom4te.cache -x config.cache -x config.guess -x config.log -x config.status -x config.sub -x '*SlackBuild*' -x '*.egg-info' -x '*.dll' -x '*.exe' -x '*.o' -x '*.gch' -x '*.gem' -x .gitignore -x '*.jpg' -x '*.png' -x '*.qm' -x '*.svgz' -x '*.tif' -x '*.class' -x '*.jlc' -x '*.pyc' -x '*.pyo' -x '*.mo' -x '*.gmo' -x '*.orig' -x '*.rej' -x '*.spec' -x '*.temp' -x '*~' -x '*.stackdump' -x x86_64-pc-cygwin -x omf.make -x xmldocs.make -x gnome-doc-utils.make -x gnome-doc-utils.m4 -x mate-doc-utils.make -x mate-doc-utils.m4 origsrc/pcl-pcl-1.8.1/examples/segmentation/example_cpc_segmentation.cpp src/pcl-pcl-1.8.1/examples/segmentation/example_cpc_segmentation.cpp
--- origsrc/pcl-pcl-1.8.1/examples/segmentation/example_cpc_segmentation.cpp	2017-08-08 15:04:14.000000000 +0900
+++ src/pcl-pcl-1.8.1/examples/segmentation/example_cpc_segmentation.cpp	2018-05-30 14:36:16.631932800 +0900
@@ -489,8 +489,8 @@ CPCSegmentation Parameters: \n\
           color = concave_color;
 
         // two times since we add also two points per edge
-        colors->InsertNextTupleValue (color);
-        colors->InsertNextTupleValue (color);
+        colors->InsertNextTypedTuple (color);
+        colors->InsertNextTypedTuple (color);
 
         pcl::Supervoxel<PointT>::Ptr supervoxel = supervoxel_clusters.at (sv_label);
         pcl::PointXYZRGBA vert_curr = supervoxel->centroid_;
diff -buprN -x CYGWIN-PATCHES -x aclocal.m4~ -x aclocal.m4t -x autom4te.cache -x config.cache -x config.guess -x config.log -x config.status -x config.sub -x '*SlackBuild*' -x '*.egg-info' -x '*.dll' -x '*.exe' -x '*.o' -x '*.gch' -x '*.gem' -x .gitignore -x '*.jpg' -x '*.png' -x '*.qm' -x '*.svgz' -x '*.tif' -x '*.class' -x '*.jlc' -x '*.pyc' -x '*.pyo' -x '*.mo' -x '*.gmo' -x '*.orig' -x '*.rej' -x '*.spec' -x '*.temp' -x '*~' -x '*.stackdump' -x x86_64-pc-cygwin -x omf.make -x xmldocs.make -x gnome-doc-utils.make -x gnome-doc-utils.m4 -x mate-doc-utils.make -x mate-doc-utils.m4 origsrc/pcl-pcl-1.8.1/examples/segmentation/example_lccp_segmentation.cpp src/pcl-pcl-1.8.1/examples/segmentation/example_lccp_segmentation.cpp
--- origsrc/pcl-pcl-1.8.1/examples/segmentation/example_lccp_segmentation.cpp	2017-08-08 15:04:14.000000000 +0900
+++ src/pcl-pcl-1.8.1/examples/segmentation/example_lccp_segmentation.cpp	2018-05-30 14:36:07.712941500 +0900
@@ -409,8 +409,8 @@ LCCPSegmentation Parameters: \n\
           color = concave_color;
         
         // two times since we add also two points per edge
-        colors->InsertNextTupleValue (color);
-        colors->InsertNextTupleValue (color);
+        colors->InsertNextTypedTuple (color);
+        colors->InsertNextTypedTuple (color);
         
         pcl::Supervoxel<PointT>::Ptr supervoxel = supervoxel_clusters.at (sv_label);
         pcl::PointXYZRGBA vert_curr = supervoxel->centroid_;
diff -buprN -x CYGWIN-PATCHES -x aclocal.m4~ -x aclocal.m4t -x autom4te.cache -x config.cache -x config.guess -x config.log -x config.status -x config.sub -x '*SlackBuild*' -x '*.egg-info' -x '*.dll' -x '*.exe' -x '*.o' -x '*.gch' -x '*.gem' -x .gitignore -x '*.jpg' -x '*.png' -x '*.qm' -x '*.svgz' -x '*.tif' -x '*.class' -x '*.jlc' -x '*.pyc' -x '*.pyo' -x '*.mo' -x '*.gmo' -x '*.orig' -x '*.rej' -x '*.spec' -x '*.temp' -x '*~' -x '*.stackdump' -x x86_64-pc-cygwin -x omf.make -x xmldocs.make -x gnome-doc-utils.make -x gnome-doc-utils.m4 -x mate-doc-utils.make -x mate-doc-utils.m4 origsrc/pcl-pcl-1.8.1/test/CMakeLists.txt src/pcl-pcl-1.8.1/test/CMakeLists.txt
--- origsrc/pcl-pcl-1.8.1/test/CMakeLists.txt	2017-08-08 15:04:14.000000000 +0900
+++ src/pcl-pcl-1.8.1/test/CMakeLists.txt	2018-05-28 23:09:32.258721900 +0900
@@ -8,11 +8,16 @@ PCL_SUBSYS_DEPEND(build "${SUBSYS_NAME}"
 
 if(build)
 
+    option(USE_SYSTEM_GTEST "use system gtest" ON)
+    if(USE_SYSTEM_GTEST)
+        add_library(pcl_gtest INTERFACE)
+        target_link_libraries(pcl_gtest INTERFACE gtest gtest_main)        
+    else()
     find_package(Gtest REQUIRED)
     include_directories(SYSTEM ${GTEST_INCLUDE_DIRS} ${GTEST_SRC_DIR})
 
     add_library(pcl_gtest STATIC ${GTEST_SRC_DIR}/src/gtest-all.cc)
-	
+	endif()
     if( MSVC11 ) # VS2012 doesn't correctly support variadic templates yet
         add_definitions("-D_VARIADIC_MAX=10")
     endif()
