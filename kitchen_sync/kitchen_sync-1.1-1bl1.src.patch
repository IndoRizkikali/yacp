--- origsrc/kitchen_sync-1.1/CMakeLists.txt	2018-07-20 12:00:55.000000000 +0900
+++ src/kitchen_sync-1.1/CMakeLists.txt	2018-08-25 21:19:41.429353900 +0900
@@ -9,12 +9,14 @@ CHECK_CXX_COMPILER_FLAG("-std=c++14" COM
 CHECK_CXX_COMPILER_FLAG("-std=c++11" COMPILER_SUPPORTS_CXX11)
 CHECK_CXX_COMPILER_FLAG("-std=c++0x" COMPILER_SUPPORTS_CXX0X)
 CHECK_CXX_COMPILER_FLAG("-stdlib=libc++" COMPILER_SUPPORTS_STDLIB)
-if(COMPILER_SUPPORTS_CXX14)
-	ADD_DEFINITIONS("-std=c++14")
-elseif(COMPILER_SUPPORTS_CXX11)
-	ADD_DEFINITIONS("-std=c++11")
-elseif(COMPILER_SUPPORTS_CXX0X)
-	ADD_DEFINITIONS("-std=c++0x")
+if(NOT CYGWIN)
+	if(COMPILER_SUPPORTS_CXX14)
+		ADD_DEFINITIONS("-std=c++14")
+	elseif(COMPILER_SUPPORTS_CXX11)
+		ADD_DEFINITIONS("-std=c++11")
+	elseif(COMPILER_SUPPORTS_CXX0X)
+		ADD_DEFINITIONS("-std=c++0x")
+	endif()
 endif()
 if(COMPILER_SUPPORTS_STDLIB)
 	ADD_DEFINITIONS("-stdlib=libc++")
@@ -59,7 +61,7 @@ if(NOT APPLE)
 endif()
 
 # is backtrace in libc?
-if(NOT APPLE)
+if(NOT APPLE AND NOT CYGWIN)
 	find_package(Backtrace)
 endif()
 
@@ -67,9 +69,12 @@ if(Backtrace_FOUND OR APPLE)
 	ADD_DEFINITIONS("-DUSE_BACKTRACE")
 endif()
 
+include(FindPkgConfig)
+pkg_check_modules(XXHASH REQUIRED xxhash)
+
 # the endpoints do the actual work
-set(ks_endpoint_SRCS src/schema.cpp src/filters.cpp src/abortable_barrier.cpp src/xxHash/xxhash.cpp)
-set(ks_endpoint_LIBS ${OPENSSL_LIBRARIES} ${YamlCPP_LIBRARIES} ${Boost_LIBRARIES})
+set(ks_endpoint_SRCS src/schema.cpp src/filters.cpp src/abortable_barrier.cpp)
+set(ks_endpoint_LIBS ${OPENSSL_LIBRARIES} ${YamlCPP_LIBRARIES} ${Boost_LIBRARIES} ${XXHASH_LIBRARIES})
 
 # turn on debugging symbols
 set(CMAKE_BUILD_TYPE Debug)
@@ -105,18 +110,18 @@ if (PostgreSQL_FOUND)
 endif()
 
 # tests require ruby and various extra gems.  to run the suite, run
-#   cmake .. && CTEST_OUTPUT_ON_FAILURE=1 make test
+#   cmake ${CMAKE_SOURCE_DIR} && CTEST_OUTPUT_ON_FAILURE=1 make test
 enable_testing()
-add_test(protocol_version_test   env BUNDLE_GEMFILE=../test/Gemfile bundle exec ruby ../test/protocol_version_test.rb)
-add_test(snapshot_from_test      env BUNDLE_GEMFILE=../test/Gemfile bundle exec ruby ../test/snapshot_from_test.rb)
-add_test(schema_from_test        env BUNDLE_GEMFILE=../test/Gemfile bundle exec ruby ../test/schema_from_test.rb)
-add_test(schema_to_test          env BUNDLE_GEMFILE=../test/Gemfile bundle exec ruby ../test/schema_to_test.rb)
-add_test(range_from_test         env BUNDLE_GEMFILE=../test/Gemfile bundle exec ruby ../test/range_from_test.rb)
-add_test(hash_from_test          env BUNDLE_GEMFILE=../test/Gemfile bundle exec ruby ../test/hash_from_test.rb)
-add_test(rows_from_test          env BUNDLE_GEMFILE=../test/Gemfile bundle exec ruby ../test/rows_from_test.rb)
-add_test(filter_from_file_test   env BUNDLE_GEMFILE=../test/Gemfile bundle exec ruby ../test/filter_from_file_test.rb)
-add_test(filter_from_test        env BUNDLE_GEMFILE=../test/Gemfile bundle exec ruby ../test/filter_from_test.rb)
-add_test(filter_to_test          env BUNDLE_GEMFILE=../test/Gemfile bundle exec ruby ../test/filter_to_test.rb)
-add_test(column_types_to_test    env BUNDLE_GEMFILE=../test/Gemfile bundle exec ruby ../test/column_types_to_test.rb)
-add_test(column_types_from_test  env BUNDLE_GEMFILE=../test/Gemfile bundle exec ruby ../test/column_types_from_test.rb)
-add_test(sync_to_test            env BUNDLE_GEMFILE=../test/Gemfile bundle exec ruby ../test/sync_to_test.rb)
+add_test(protocol_version_test   env BUNDLE_GEMFILE=${CMAKE_SOURCE_DIR}/test/Gemfile bundle exec ruby ${CMAKE_SOURCE_DIR}/test/protocol_version_test.rb)
+add_test(snapshot_from_test      env BUNDLE_GEMFILE=${CMAKE_SOURCE_DIR}/test/Gemfile bundle exec ruby ${CMAKE_SOURCE_DIR}/test/snapshot_from_test.rb)
+add_test(schema_from_test        env BUNDLE_GEMFILE=${CMAKE_SOURCE_DIR}/test/Gemfile bundle exec ruby ${CMAKE_SOURCE_DIR}/test/schema_from_test.rb)
+add_test(schema_to_test          env BUNDLE_GEMFILE=${CMAKE_SOURCE_DIR}/test/Gemfile bundle exec ruby ${CMAKE_SOURCE_DIR}/test/schema_to_test.rb)
+add_test(range_from_test         env BUNDLE_GEMFILE=${CMAKE_SOURCE_DIR}/test/Gemfile bundle exec ruby ${CMAKE_SOURCE_DIR}/test/range_from_test.rb)
+add_test(hash_from_test          env BUNDLE_GEMFILE=${CMAKE_SOURCE_DIR}/test/Gemfile bundle exec ruby ${CMAKE_SOURCE_DIR}/test/hash_from_test.rb)
+add_test(rows_from_test          env BUNDLE_GEMFILE=${CMAKE_SOURCE_DIR}/test/Gemfile bundle exec ruby ${CMAKE_SOURCE_DIR}/test/rows_from_test.rb)
+add_test(filter_from_file_test   env BUNDLE_GEMFILE=${CMAKE_SOURCE_DIR}/test/Gemfile bundle exec ruby ${CMAKE_SOURCE_DIR}/test/filter_from_file_test.rb)
+add_test(filter_from_test        env BUNDLE_GEMFILE=${CMAKE_SOURCE_DIR}/test/Gemfile bundle exec ruby ${CMAKE_SOURCE_DIR}/test/filter_from_test.rb)
+add_test(filter_to_test          env BUNDLE_GEMFILE=${CMAKE_SOURCE_DIR}/test/Gemfile bundle exec ruby ${CMAKE_SOURCE_DIR}/test/filter_to_test.rb)
+add_test(column_types_to_test    env BUNDLE_GEMFILE=${CMAKE_SOURCE_DIR}/test/Gemfile bundle exec ruby ${CMAKE_SOURCE_DIR}/test/column_types_to_test.rb)
+add_test(column_types_from_test  env BUNDLE_GEMFILE=${CMAKE_SOURCE_DIR}/test/Gemfile bundle exec ruby ${CMAKE_SOURCE_DIR}/test/column_types_from_test.rb)
+add_test(sync_to_test            env BUNDLE_GEMFILE=${CMAKE_SOURCE_DIR}/test/Gemfile bundle exec ruby ${CMAKE_SOURCE_DIR}/test/sync_to_test.rb)
