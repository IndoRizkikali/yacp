--- origsrc/libplctag-1.5.10/CMakeLists.txt	2018-06-10 07:37:44.000000000 +0900
+++ src/libplctag-1.5.10/CMakeLists.txt	2018-07-06 17:50:12.594985000 +0900
@@ -166,6 +166,9 @@ ENDFOREACH()
 
 # set up the library
 add_library(plctag SHARED ${libplctag_SRCS} )
+if (CYGWIN)
+    set_target_properties(plctag PROPERTIES SOVERSION 0)
+endif()
 
 # Windows needs to link the library to the WINSOCK library
 if (WIN32)
@@ -214,17 +217,23 @@ foreach ( example ${example_PROGRAMS} )
     set_source_files_properties("${example_SRC_PATH}/${example}.c" PROPERTIES COMPILE_FLAGS ${BASE_C_FLAGS})
     add_executable( ${example} "${example_SRC_PATH}/${example}.c" "${example_SRC_PATH}/${example_PROG_UTIL}" "${example_SRC_PATH}/utils.h" )
     target_link_libraries(${example} ${example_LIBRARIES} )
+    if (CYGWIN)
+        install(TARGETS ${example} RUNTIME DESTINATION share/libplctag/example)
+    endif()
 endforeach(example)
 
 # simple.cpp is different because it is C++
 set_source_files_properties("${example_SRC_PATH}/simple_cpp.cpp" PROPERTIES COMPILE_FLAGS ${BASE_CXX_FLAGS})
 add_executable (simple_cpp "${example_SRC_PATH}/simple_cpp.cpp" "${example_SRC_PATH}/${example_PROG_UTIL}" "${example_SRC_PATH}/utils.h" )
 target_link_libraries (simple_cpp ${example_LIBRARIES} )
+if (CYGWIN)
+    install(TARGETS simple_cpp RUNTIME DESTINATION share/libplctag/example)
+endif()
 
 # Generate files from templates
 CONFIGURE_FILE("${CMAKE_CURRENT_SOURCE_DIR}/libplctag.pc.in" "${CMAKE_CURRENT_BINARY_DIR}/libplctag.pc" @ONLY)
 
 # for installation
-install(TARGETS plctag DESTINATION lib)
+install(TARGETS plctag RUNTIME DESTINATION bin ARCHIVE DESTINATION lib)
 install(FILES "${lib_SRC_PATH}/libplctag.h" DESTINATION include)
 install(FILES "${CMAKE_CURRENT_BINARY_DIR}/libplctag.pc" DESTINATION "lib/pkgconfig")
